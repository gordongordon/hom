webpackHotUpdate(0,{

/***/ 769:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.Fb = undefined;\n\nvar _firebase = __webpack_require__(277);\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nvar _mobxStore = __webpack_require__(275);\n\nvar _mobxStore2 = _interopRequireDefault(_mobxStore);\n\nvar _appStore = __webpack_require__(770);\n\nvar _appStore2 = _interopRequireDefault(_appStore);\n\nvar _propertysViewModel = __webpack_require__(768);\n\nvar _agentModelView = __webpack_require__(771);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\ntry {\n\n  var config = {\n    apiKey: 'AIzaSyD_SHmOwRUywGbWf9rRwP-MKSI3d0cYJu8',\n    authDomain: 'todo-app-a2b7c.firebaseapp.com',\n    databaseURL: 'https://todo-app-a2b7c.firebaseio.com',\n    storageBucket: 'todo-app-a2b7c.appspot.com'\n  };\n\n  _firebase2.default.initializeApp(config);\n} catch (e) {}\n\nvar startLogin = function startLogin() {\n  return _firebase2.default.auth().signInWithPopup(githubProvider).then(function (result) {\n    // Fb.app.updateUid();\n\n    console.log('Auth Worked', result);\n  }, function () {\n    console.log('unable to login');\n  });\n};\n\nvar startLoginGoogle = function startLoginGoogle() {\n\n  return _firebase2.default.auth().signInWithPopup(googleProvider).then(function (result) {\n    // This gives you a Google Access Token. You can use it to access the Google API.\n    var token = result.credential.accessToken;\n    // The signed-in user info.\n    var user = result.user;\n    // ...\n    //Fb.app.updateUid();\n\n    console.log('Auth Worked', result);\n  }).catch(function (error) {\n    // Handle Errors here.\n    var errorCode = error.code;\n    var errorMessage = error.message;\n    // The email of the user's account used.\n    var email = error.email;\n    // The firebase.auth.AuthCredential type that was used.\n    var credential = error.credential;\n    console.log('unable to login');\n    // ...\n  });\n};\n\nvar startLoginFacebook = function startLoginFacebook() {\n  return _firebase2.default.auth().signInWithPopup(facebookProvider).then(function (result) {\n    //this.user = true;\n    //Fb.app.updateUid();\n    console.log('Auth Worked', result);\n  }, function () {\n    console.log('unable to login');\n  });\n};\n\nvar startLoginAnonyhmously = function startLoginAnonyhmously() {\n\n  _firebase2.default.auth().signInAnonymously().then(function (snapshot) {\n    // The callback succeeded; do something with the final result.\n    console.log('signInAnonymously completed');\n\n    //Fb.app.updateUid();\n\n    return true;\n  }, function (error) {\n    return false;\n    // The callback failed.\n    console.error(error);\n  });\n\n  // .catch(function(error) {\n  //   // Handle Errors here.\n  //   console.log( 'sing in anonymously error', errorMessage )\n  //   var errorCode = error.code;\n  //   var errorMessage = error.message;\n  //   console.log( 'sing in anonymously error', errorMessage )\n  //   // ...\n  // });\n};\n\nvar startLogout = function startLogout() {\n  return _firebase2.default.auth().signOut().then(function () {\n    console.log('Logged out!');\n    //propertys.clear();\n    // agentModel.clear();\n\n    _mobxStore2.default.app.user = false;\n    _propertysViewModel.propertys.clear();\n    _mobxStore2.default.app.uid = null;\n    _agentModelView.agentModel.clear();\n  });\n};\n\n//console.log( 'MobxStore.app', MobxStore)\n//var uid =  MobxStore.app.uid;\n//console.log('uid', MobxStore.app.uid)\nvar root = _firebase2.default.database().ref();\nvar propertys = _firebase2.default.database().ref('propertys');\nvar propertysForSale = _firebase2.default.database().ref('propertys/ForSale');\nvar agentPropertys = _firebase2.default.database().ref('agentPropertys');\n//const propertysForRent = firebase.database().ref('propertysForRent');\n//const propertysForSale = firebase.database().ref('propertysForSale');\n//const propertysForLease = firebase.database().ref('propertysForLease');\n//const property = firebase.database().ref('property');\nvar matchedPropertys = _firebase2.default.database().ref('matchedPropertys');\n\n// const mbsdk = () => {\n//   var uid = MobxStore.app.uid;\n// }\n\n\nvar Fb = {\n  app: new _appStore2.default(),\n  root: root,\n  propertys: propertys,\n  agentPropertys: agentPropertys,\n  startLogin: startLogin,\n  startLogout: startLogout,\n  startLoginAnonyhmously: startLoginAnonyhmously,\n  startLoginFacebook: startLoginFacebook,\n  startLoginGoogle: startLoginGoogle,\n  //propertysForRent,\n  //propertysForSale,\n  //propertysForLease,\n  //property,\n  matchedPropertys: matchedPropertys\n};\n\nvar githubProvider = new _firebase2.default.auth.GithubAuthProvider();\nvar facebookProvider = new _firebase2.default.auth.FacebookAuthProvider();\nvar googleProvider = new _firebase2.default.auth.GoogleAuthProvider();\nexports.Fb = Fb;\n\n//  How to handle incremental\n// var errId = 0;\n// // creates a new, incremental record\n// function incId() {\n//     // increment the counter\n//     fb.child('counter').transaction(function(currentValue) {\n//         return (currentValue||0) + 1\n//     }, function(err, committed, ss) {\n//         if( err ) {\n//            setError(err);\n//         }\n//         else if( committed ) {\n//            // if counter update succeeds, then create record\n//            // probably want a recourse for failures too\n//            addRecord(ss.val());\n//         }\n//     });\n// }\n//\n// // creates new incremental record\n// function addRecord(id) {\n//     setTimeout(function() {\n//        fb.child('records').child('rec'+id).set('record #'+id, function(err) {\n//           err && setError(err);\n//        });\n//     });\n// }//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})