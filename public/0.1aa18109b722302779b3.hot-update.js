webpackHotUpdate(0,{

/***/ 807:
/***/ (function(module, exports, __webpack_require__) {

	eval("'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.propertys = undefined;\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _desc, _value, _class, _descriptor, _descriptor2, _class2, _temp, _initialiseProps;\n\nvar _mobx = __webpack_require__(440);\n\nvar _firebaseStore = __webpack_require__(808);\n\nvar _propertyhk = __webpack_require__(811);\n\nvar _property = __webpack_require__(812);\n\nvar _mobxStore = __webpack_require__(441);\n\nvar _mobxStore2 = _interopRequireDefault(_mobxStore);\n\nvar _firebase = __webpack_require__(443);\n\nvar _firebase2 = _interopRequireDefault(_firebase);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _initDefineProp(target, property, descriptor, context) {\n  if (!descriptor) return;\n  Object.defineProperty(target, property, {\n    enumerable: descriptor.enumerable,\n    configurable: descriptor.configurable,\n    writable: descriptor.writable,\n    value: descriptor.initializer ? descriptor.initializer.call(context) : void 0\n  });\n}\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _applyDecoratedDescriptor(target, property, decorators, descriptor, context) {\n  var desc = {};\n  Object['ke' + 'ys'](descriptor).forEach(function (key) {\n    desc[key] = descriptor[key];\n  });\n  desc.enumerable = !!desc.enumerable;\n  desc.configurable = !!desc.configurable;\n\n  if ('value' in desc || desc.initializer) {\n    desc.writable = true;\n  }\n\n  desc = decorators.slice().reverse().reduce(function (desc, decorator) {\n    return decorator(target, property, desc) || desc;\n  }, desc);\n\n  if (context && desc.initializer !== void 0) {\n    desc.value = desc.initializer ? desc.initializer.call(context) : void 0;\n    desc.initializer = undefined;\n  }\n\n  if (desc.initializer === void 0) {\n    Object['define' + 'Property'](target, property, desc);\n    desc = null;\n  }\n\n  return desc;\n}\n\nfunction _initializerWarningHelper(descriptor, context) {\n  throw new Error('Decorating class property failed. Please ensure that transform-class-properties is enabled.');\n}\n\n// List of user properties, to be .on\n// propertyViewModel\nvar PropertysViewModel = (_class = (_temp = _class2 = function () {\n  //@observable matchedPropertys = observable.map({});\n\n  //@observable propertys = map({});\n  //@observable propertys = new Map();\n\n  function PropertysViewModel() {\n    _classCallCheck(this, PropertysViewModel);\n\n    _initialiseProps.call(this);\n\n    var that = this;\n    //var uid = MobxStore.app.uid;\n    // Mayn't need that\n    //that.propertys.clear();\n\n    //console.log('size b', this.propertys.size )\n    // Fb.app.propertysRef.on('value', (snapshot) => {\n    //   console.log( 'snapshot.val', snapshot.val());\n    //   this.propertys = snapshot.val();\n    //\n    //   console.log('size', this.propertys.size )\n    //   console.log( 'snapshot.size ', snapshot.numChildren() );\n    // });\n\n    // Fb.app.propertysRef.orderByChild(\"price\").on('child_added', (snapshot) => {\n    //   console.log( 'snapshot.val', snapshot.val());\n    //   this.propertys = snapshot.val();\n    //\n    //   //console.log('size', this.propertys.size )\n    //   console.log( 'snapshot.size ', snapshot.numChildren() );\n    // });\n\n\n    // Fb.app.matchedPropertysRef.on('value',function(snap) {\n    //      snap.forEach(function(item) {\n    //         that.matchedPropertys.set( item.key, item.val() );\n    //         //console.log( item.key, item.val() )\n    //         console.log('that.propertys.size', that.matchPpropertys.size)\n    //     });\n    // });\n\n\n    //     // Handle Child_added\n    //     if ( Fb.app.propertysRef !== undefined ) {\n    //     Fb.app.propertysRef.on('child_added', (snapshot) => {\n    //\n    //             console.log( \"fire\", snapshot.val() )\n    //             var p = new Propertyhk();\n    //\n    //            // Tobe Testing.\n    //             // p = { ...p, ...snapshot.val() }\n    //\n    //             // restore can be imppletemt  deserialize\n    //             p.restore( snapshot.val() )\n    //             console.log( 'p', p)\n    // //            console.log( 'snapddd', snapshot.val() )\n    //             // p.done = snapshot.val().done\n    //             // p.contactName = snapshot.val().contactName\n    //             // p.nameOfBuilding = snapshot.val().nameOfBuilding;\n    //             // p.location = snapshot.val().location\n    //             // p.nearByMtrLine = snapshot.val().nearByMtrLine\n    //             // p.nearByMtrStop = snapshot.val().nearByMtrStop\n    //             // p.salePrice = snapshot.val().salePrice\n    //             // p.typeTo = snapshot.val().typeTo\n    //             // p.typeBy = snapshot.val().typeBy\n    //             // p.typeFor = snapshot.val().typeFor\n    //\n    //             p.buildMatchProperty( snapshot.key, p.typeFor, p.location);\n    //\n    //             console.log( 'child_add - psvm.matchedPropertys.size', p.matchedPropertys.size );\n    //             that.propertys.set( snapshot.key, p );\n    //     });\n    //\n    //    // Handle child_removed\n    //    Fb.app.propertysRef.on('child_removed', (snapshot) => {\n    //                 that.propertys.delete( snapshot.key );\n    //                 // console.log('that.propertys.size', that.propertys.size)\n    //    });\n    //  }  // End of if null\n\n  }\n\n  _createClass(PropertysViewModel, [{\n    key: 'json',\n    get: function get() {\n      console.log('json', this.propertys);\n      return (0, _mobx.toJS)(this.propertys);\n    }\n\n    // init propertysViewModel, for mobx,\n    // can't be used inside constructor, otherwise error\n    // when app start will call an empty constructor\n\n    //\n    // addPropertyForSale = ( nearByMtrLine, nearByMtrStop, netSize, salePrice, numOfRoom, numofBathroom, contactName, contactPhone, contactEmail) =>\n    // {\n    //   var p = new Property();\n    //\n    //\n    //   p.nearByMtrLine = nearByMtrLine;\n    //   p.nearByMtrStop = nearByMtrStop;\n    //   p.netSize = parseInt(netSize);\n    //   p.salePrice = parseInt(salePrice);\n    //   p.numOfRoom = parseInt(numOfRoom);\n    //   p.numofBathroom = parseInt(numofBathroom);\n    //   p.contactName = contactName;\n    //   p.contactPhone = parseInt(contactPhone);\n    //   p.contactEmail = contactEmail;\n    //\n    //   const id = Fb.app.propertysRef.push().key;\n    //   Fb.app.propertysRef.update( {[id]:  p.serialize() });\n    // }\n    //\n    //\n    // // For testing only must create first\n    // addProperty(userName, nameOfBuilding, location, typeTo, typeBy, typeFor, price ){\n    //     var p = this.property = new Propertyhk();\n    //     p.done = false\n    //     p.contactName = userName\n    //     p.nameOfBuilding = nameOfBuilding\n    //     p.location = location\n    //     p.salePrice = parseInt(price)\n    //     p.typeTo = typeTo\n    //     p.typeBy = typeBy\n    //     p.typeFor = typeFor\n    //\n    //     const id = Fb.app.propertysRef.push().key;\n    //     Fb.app.propertysRef.update( {[id]:  p.serialize() });\n    // }\n    //\n    // writeNewPost = (uid, username, picture, title, body) => {\n    //   // A post entry.\n    //   var postData = {\n    //     author: username,\n    //     uid: uid,\n    //     body: body,\n    //     title: title,\n    //     starCount: 0,\n    //     authorPic: picture\n    //   };\n\n    // Get a key for a new Post.\n    // var newPostKey = Fb.app.propertysRef.child('posts').push().key;\n\n    // Write the new post's data simultaneously in the posts list and the user's post list.\n    //   var updates = {};\n    //   updates['/posts/' + newPostKey] = postData;\n    //   updates['/user-posts/' + uid + '/' + newPostKey] = postData;\n    //\n    //   return Fb.app.propertysRef.update(updates);\n    // }\n\n    /**\r\n     * @compareTo is name of variable e.g. name, price, location\r\n     * @valueTo   is value equal to.  e.g. 'shatin'\r\n     * return\r\n     */\n\n  }]);\n\n  return PropertysViewModel;\n}(), _initialiseProps = function _initialiseProps() {\n  var _this = this;\n\n  _initDefineProp(this, 'propertys', _descriptor, this);\n\n  _initDefineProp(this, 'init', _descriptor2, this);\n\n  this.add = function (name) {\n    var id = _firebaseStore.Fb.app.propertysRef.push().key;\n    _this.update(id, name);\n  };\n\n  this.getMatchProperty = function (id, compareTo, valueTo) {\n    var that = _this;\n    console.log('match');\n\n    //this.writeNewPost( 1233, 'gordon', 'picture', 'title', 'body')\n\n    // Handle match propertys\n    _firebaseStore.Fb.app.propertysRef.orderByChild(compareTo).equalTo(valueTo).on(\"child_added\", function (snap) {\n\n      _firebaseStore.Fb.app.matchedPropertysRef.child(snap.key).set(snap.val());\n      //          Fb.app.propertysRef.update( { snap.key : { } })\n      that.matchedPropertys.set(snap.key, snap.val());\n      console.log('matchProperty.size', that.matchedPropertys.size);\n    });\n\n    _firebaseStore.Fb.app.propertysRef.orderByChild(compareTo).equalTo(valueTo).on(\"child_removed\", function (snap) {\n\n      that.matchedPropertys.delete(snap.key);\n      console.log('matchProperty.size', that.matchedPropertys.size);\n    });\n  };\n\n  this.update = function (id, name) {\n    _firebaseStore.Fb.app.propertysRef.update(_defineProperty({}, id, { name: name }));\n  };\n\n  this.del = function (id) {\n    _firebaseStore.Fb.app.propertysRef.child(id).remove();\n    _firebaseStore.Fb.propertys.child(id).remove();\n    //this.propertys.delete( id );\n  };\n}, _temp), (_descriptor = _applyDecoratedDescriptor(_class.prototype, 'propertys', [_mobx.observable], {\n  enumerable: true,\n  initializer: function initializer() {\n    return _mobx.observable.map({});\n  }\n}), _applyDecoratedDescriptor(_class.prototype, 'json', [_mobx.computed], Object.getOwnPropertyDescriptor(_class.prototype, 'json'), _class.prototype), _descriptor2 = _applyDecoratedDescriptor(_class.prototype, 'init', [_mobx.action], {\n  enumerable: true,\n  initializer: function initializer() {\n    var _this2 = this;\n\n    return function () {\n      var that = _this2;\n      // Handle Child_added\n      //if ( Fb.app.propertysRef !== undefined ) {\n      _firebaseStore.Fb.app.usersRef.on('child_added', function (snapshot) {\n\n        console.log(\"fire\", snapshot.val());\n        var p = new _propertyhk.Propertyhk();\n\n        // restore can be imppletemt  deserialize\n        p.restore(snapshot.val());\n        console.log('p', p);\n\n        p.buildMatchProperty(snapshot.key, p.typeFor, p.location);\n\n        console.log('child_add - psvm.matchedPropertys.size', p.matchedPropertys.size);\n        that.propertys.set(snapshot.key, p);\n      });\n\n      // Handle child_removed\n      _firebaseStore.Fb.app.usersRef.on('child_removed', function (snapshot) {\n        that.propertys.delete(snapshot.key);\n        // console.log('that.propertys.size', that.propertys.size)\n      });\n      //}  // End of if null\n    };\n  }\n})), _class);\n\n\nvar propertys = new PropertysViewModel();\nexports.propertys = propertys;//# sourceMappingURL=data:application/json;charset=utf-8;base64,");

/***/ })

})